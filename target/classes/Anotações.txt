Vou escrever aqui alguns tópicos para estudar e também conteúdos que vi de outros Repositórios no GitHub.

Funções:
scan.skip() => é uma função usada durante a leitura do scan em diversas variáveis diferentes, ele utiliza um parâmetro para pular o mesmo
tornando mais fácil a leitura correta das informações quando se tem diversas variáveis ao mesmo tempo.

JVM:
A ordem de execução do código pela JVM
1 - Bloco de inicialização estático da Super Classe é executado quando a JVM carrega a Classe pai
2 - Bloco de inicialização estático da subclasse é executado quando a JVM carrega a Classe filho
3 - Aloca o espaço em memória pro Objeto da Super Classe
4 - Cada atributo de classe é criado e inicializado com valores default ou o que fora passado a Super Classe
5 - Construtor da Super Classe é executado
6 - Alocado o espaço em memória para o objeto da subclasse
7 - Cada atributo de classe é criado e inicializado com valores default ou o que fora passado a subclasse
8 - Inicializadores são executados na ordem que aparecem na subclasse
9 - Construtor da subclasse é executado

Cada classe não pode herdar mais de 2 classes, uma ela herda por padrão que é Object.
Afinal para o java cada classe é um objeto, a segunda classe é nós que definimos

Modificadores de Acesso do mais restritivo ao menos
Private -> Default/Package -> Protected -> Public


Tópicos:
- Pesquisar a Documentação do Java.
- Pesquisar sobre Pós e Pré incremento.
- Pesquisar sobre Try e Catch, principalmente o Try with resources.
- Pesquisar sobre Listas no Java.
- Pesquisar sobre ForEach interable.
- Pesquisar sobre HashCode e HashSet.
- Pesquisar sobre Garbage Collector.
- Pesquisar sobre Halting Condition.
- Pesquisar sobre Bloco de Inicialização.
- Pesquisar sobre Enums no Java.
- Pesquisar sobre Widening Casting.
- Pesquisar sobre narrowing casting.
- Pesquisar sobre Checked e Unchecked exceptions.
- Pesquisar sobre Unboxing e Autoboxing.
- Pesquisar sobre String constant Pools e String Interning.
- Pesquisar sobre Java Swing.
- Pesquisar sobre a ChronoField das classes de Tempo.
- Pesquisar sobre as classes de tempo e suas formatações.
- Pesquisar sobre o controle de Arquivos e Diretórios pelos Paths e Files.
- Pesquisar sobre a manipulação de atributos dos arquivos para diferentes OS.
- Pesquisar sobre PathMatcher.
- Pesquisar sobre Serialization.
- Pesquisar sobre Comparable e Comparator.
- Pesquisar sobre Lambda.
- Pesquisar sobre o Optional.
- Pesquisar sobre Programação Funcional.
- Pesquisar sobre Method References.
- Pesquisar sobre Streams e suas funções.
- Pesquisar sobre ThreadLocalRandom.
- Pesquisar sobre Collections para Streams.
- Pesquisar sobre Parallel Streams.
- Pesquisar sobre Threads.
- Pesquisar sobre Concorrência.
- Pesquisar sobre Imutabilidade no Java (visando Thread em específico).
- Pesquisar sobre Executors.
- Pesquisar sobre Processamento Síncrono e Assíncrono.
- Pesquisar sobre Documentação no Java.
- Pesquisar sobre RegEx.
- Pesquisar sobre Design Patterns.
- Pesquisar sobre DTO.
- Pesquisar sobre JDBC.
- Pesquisar sobre Callable Statement.
- Pesquisar sobre RowSet.
- Reforçar os conceito de Classe Abstrata.
- Revisar os conceitos de Coleção.


Coisas para fazer:
- Terminar o TestsMatriz.Java.
- Terminar o GenshinList.
- Terminar o exercício do Gerencia estudo.
- Terminar o desafio de fazer um validador de cadastro.
- Terminar o exercício da Empresa arrumando o bônus do salário.
- Terminar o exercício da Aula 127 sobre TemporalAdjusters.
- Terminar o código do FileManagement para praticar IO de arquivos.
- Colocar nos projetos a possibilidade de trocar o idioma da interface pelo ResourceBundle.
- Refazer o código do BankAccount da Aula da faculdade.
- Refazer o código do ReentrantReadWriteLock.
- Refazer o código da aula de CompletableFutureCalls.
- Revisar a pasta IO e NIO para saber se preciso revisar alguma questão.


Projetos:
- Criar o sistema do Jogo de Xadrez.
- Criar o sistema de venda de passagens aéreas da Varig.
- Criar o sistema do Jogo BlackJack (21).
- Criar um sistema Simples de gerenciamento de Arquivos.
- Criar um sistema de venda de livros.